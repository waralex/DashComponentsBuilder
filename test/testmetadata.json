{
    "src/components/A.react.js": {
      "description": "A is a wrapper for the <a> HTML5 element.\nFor detailed attribute info see:\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/a",
      "displayName": "A",
      "methods": [],
      "props": {
        "id": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
        },
        "children": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "The children of this component"
        },
        "key": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info"
        },
        "data-*": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "A wildcard data attribute"
        },
        "aria-*": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "A wildcard aria attribute"
        },
        "hidden": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "enum",
                "value": [
                  {
                    "value": "'hidden'",
                    "computed": false
                  },
                  {
                    "value": "'HIDDEN'",
                    "computed": false
                  }
                ]
              },
              {
                "name": "bool"
              }
            ]
          },
          "required": false,
          "description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
        },
        "style": {
          "type": {
            "name": "object"
          },
          "required": false,
          "description": "Defines CSS styles which will override styles previously set."
        },
        "loading_state": {
          "type": {
            "name": "shape",
            "value": {
              "is_loading": {
                "name": "bool",
                "description": "Determines if the component is loading or not",
                "required": false
              },
              "prop_name": {
                "name": "string",
                "description": "Holds which property is loading",
                "required": false
              },
              "component_name": {
                "name": "string",
                "description": "Holds the name of the component that is loading",
                "required": false
              }
            }
          },
          "required": false,
          "description": "Object that holds the loading state object coming from dash-renderer"
        },
        "setProps": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Dash-assigned callback that gets fired when the element is clicked."
        }
      }
    },
    "src/components/Abbr.react.js": {
      "description": "Abbr is a wrapper for the <abbr> HTML5 element.\nFor detailed attribute info see:\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr",
      "displayName": "Abbr",
      "methods": [],
      "props": {
        "id": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
        },
        "children": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "The children of this component"
        },
        "n_clicks": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "An integer that represents the number of times\nthat this element has been clicked on.",
          "defaultValue": {
            "value": "0",
            "computed": false
          }
        },
        "n_clicks_timestamp": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.",
          "defaultValue": {
            "value": "-1",
            "computed": false
          }
        },
        "key": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info"
        },
        "role": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The ARIA role attribute"
        },
        "data-*": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "A wildcard data attribute"
        },
        "aria-*": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "A wildcard aria attribute"
        },
        "accessKey": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Keyboard shortcut to activate or add focus to the element."
        },
        "className": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Often used with CSS to style elements with common properties."
        },
        "contentEditable": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Indicates whether the element's content is editable."
        },
        "contextMenu": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Defines the ID of a <menu> element which will serve as the element's context menu."
        },
        "dir": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
        },
        "draggable": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Defines whether the element can be dragged."
        },
        "hidden": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "enum",
                "value": [
                  {
                    "value": "'hidden'",
                    "computed": false
                  },
                  {
                    "value": "'HIDDEN'",
                    "computed": false
                  }
                ]
              },
              {
                "name": "bool"
              }
            ]
          },
          "required": false,
          "description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
        },
        "lang": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Defines the language used in the element."
        },
        "spellCheck": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Indicates whether spell checking is allowed for the element."
        },
        "style": {
          "type": {
            "name": "object"
          },
          "required": false,
          "description": "Defines CSS styles which will override styles previously set."
        },
        "tabIndex": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Overrides the browser's default tab order and follows the one specified instead."
        },
        "title": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Text to be displayed in a tooltip when hovering over the element."
        },
        "loading_state": {
          "type": {
            "name": "shape",
            "value": {
              "is_loading": {
                "name": "bool",
                "description": "Determines if the component is loading or not",
                "required": false
              },
              "prop_name": {
                "name": "string",
                "description": "Holds which property is loading",
                "required": false
              },
              "component_name": {
                "name": "string",
                "description": "Holds the name of the component that is loading",
                "required": false
              }
            }
          },
          "required": false,
          "description": "Object that holds the loading state object coming from dash-renderer"
        },
        "setProps": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Dash-assigned callback that gets fired when the element is clicked."
        }
      }
    }
}